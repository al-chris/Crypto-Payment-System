"""Change amount columns to DECIMAL

Revision ID: 63a67907bc02
Revises: 
Create Date: 2025-10-26 05:38:38.214051

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '63a67907bc02'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('forwardingtransaction', 'amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.DECIMAL(precision=18, scale=8),
               nullable=True)
    op.create_unique_constraint(None, 'forwardingtransaction', ['id'])
    op.create_unique_constraint(None, 'log', ['id'])
    op.alter_column('transaction', 'amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.DECIMAL(precision=18, scale=8),
               nullable=True)
    op.create_unique_constraint(None, 'transaction', ['id'])
    op.create_unique_constraint(None, 'user', ['id'])
    op.create_unique_constraint(None, 'wallet', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'wallet', type_='unique')
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_constraint(None, 'transaction', type_='unique')
    op.alter_column('transaction', 'amount',
               existing_type=sa.DECIMAL(precision=18, scale=8),
               type_=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.drop_constraint(None, 'log', type_='unique')
    op.drop_constraint(None, 'forwardingtransaction', type_='unique')
    op.alter_column('forwardingtransaction', 'amount',
               existing_type=sa.DECIMAL(precision=18, scale=8),
               type_=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    # ### end Alembic commands ###
